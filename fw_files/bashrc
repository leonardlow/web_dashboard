# /etc/bashrc

# System wide functions and aliases
# Environment stuff goes in /etc/profile

# By default, we want this to get set.
# Even for non-interactive, non-login shells.
if [ $UID -gt 99 ] && [ "`id -gn`" = "`id -un`" ]; then
	umask 002
else
	umask 007
fi

# are we an interactive shell?
if [ "$PS1" ]; then
    case $TERM in
	xterm*)
		if [ -e /etc/sysconfig/bash-prompt-xterm ]; then
			PROMPT_COMMAND=/etc/sysconfig/bash-prompt-xterm
		else
	    	PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/~}"; echo -ne "\007"'
		fi
		;;
	screen)
		if [ -e /etc/sysconfig/bash-prompt-screen ]; then
			PROMPT_COMMAND=/etc/sysconfig/bash-prompt-screen
		else
		PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/~}"; echo -ne "\033\\"'
		fi
		;;
	*)
		[ -e /etc/sysconfig/bash-prompt-default ] && PROMPT_COMMAND=/etc/sysconfig/bash-prompt-default
	    ;;
    esac
    # Turn on checkwinsize
    shopt -s checkwinsize
    [ "$PS1" = "\\s-\\v\\\$ " ] && PS1="[\u@\h \W]\\$ "
fi

if ! shopt -q login_shell ; then # We're not a login shell
	# Need to redefine pathmunge, it get's undefined at the end of /etc/profile
    pathmunge () {
		if ! echo $PATH | /bin/egrep -q "(^|:)$1($|:)" ; then
			if [ "$2" = "after" ] ; then
				PATH=$PATH:$1
			else
				PATH=$1:$PATH
			fi
		fi
	}

	for i in /etc/profile.d/*.sh; do
		if [ -r "$i" ]; then
			. $i
	fi
	done
	unset i
	unset pathmunge
fi

alias brctl="/bin/brctl_start"

if [ "`/bin/is_mbs.sh 2>/dev/null`" == "mbs" ]; then
	alias setup="/bin/sysconfig"
fi

# Gaia specific setup
if [ -f "/etc/appliance_config.xml" ] ; then
	 alias cpconfig="/bin/cpconfig_start"
	 alias reboot="/bin/system_reboot"
	 alias ifconfig="/bin/cp-ifconfig.sh"
	 alias dmesg="dmesg -T"
	 alias ll="ls -l --color=auto"
	 alias take.info="cat /sysimg/CPwrapper/linux/MiniWrapper/take.info"
fi

# SPLAT specific setup
IDLE="`sed -n 's/idle=//p' /etc/cpshell/cpshell.state 2>/dev/null`"
[ -z "$IDLE" ] && IDLE=3
export TMOUT=`expr $IDLE \* 60`
export SHELL=/bin/bash
export HISTFILESIZE=0

LINUXVER=`uname -r | awk -F. '{print $1 "." $2}'`

if [ "$LINUXVER" == "2.6" ] ; then
	if [ -f /proc/self/vrf ]; then
    	VRF_NUMBER=`cat /proc/self/vrf`
	else
    	VRF_NUMBER=""
	fi

	if [ -f /etc/profile.d/vsenv.sh ] && [ -n "${VRF_NUMBER}" ]; then
	   export PS1='[Expert@$HOSTNAME:`echo -ne "" ; cat /proc/self/vrf`]# '
	   vsenv $VRF_NUMBER 1>/dev/null 2>&1
	else
	   export PS1='[Expert@$HOSTNAME]# '
	fi
elif [ "$LINUXVER" == "3.10" ] ; then
	if [ -f /proc/self/nsid ]; then
		NSID_NUMBER=`cat /proc/self/nsid`
	else
		NSID_NUMBER=""
	fi

	if [ -f /etc/profile.d/vsenv.sh ] && [ -n "${NSID_NUMBER}" ]; then
		export PS1='[Expert@$HOSTNAME:`echo -ne "" ; cat /proc/self/nsid`]# '
		vsenv $NSID_NUMBER 1>/dev/null 2>&1
	else
		export PS1='[Expert@$HOSTNAME]# '
	fi	
fi

_list_vds() {
		
		ISCLUSTER="$(cpprod_util fwishighavail)"
		if [ "$ISCLUSTER" -eq "0" ]  ; then
			for CURRVSID in `dbget -c instance` ; do
				CURRVSNAME=`dbget instance:$CURRVSID:name`
				echo $CURRVSNAME
			done
		else
			VS0DIR="$(echo $FWDIR | grep -Po '^.*/fw1')"
			VS0NAMEDIR="$VS0DIR/conf/vsname"
			VS0NAME="$(cat $VS0NAMEDIR)"
			PREFIX=$VS0NAME"_"
			PREFIXLENGTH=${#PREFIX}
			for CURRVSID in `dbget -c instance` ; do
				CURRVSNAME=`dbget instance:$CURRVSID:name`
				echo ${CURRVSNAME:$PREFIXLENGTH}
			done
		fi
}

_vsenv() {

        _opts="$(_list_vds)"
        COMPREPLY=()
        cur="${COMP_WORDS[COMP_CWORD]}"
        COMPREPLY=( $(compgen -W "${_opts}" -- ${cur}) )
        return 0
}

complete -F _vsenv vsenv

export LVM_SUPPRESS_FD_WARNINGS=1

# vim:ts=4:sw=4
